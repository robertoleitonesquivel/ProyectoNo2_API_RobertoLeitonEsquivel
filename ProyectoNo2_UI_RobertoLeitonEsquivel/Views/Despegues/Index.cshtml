@model MODELS.DTO.DespeguesDTO

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("", "", FormMethod.Post, new { id = "frmDespegues" }))
{
    @Html.AntiForgeryToken()

    <section class="card">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card-header">
            Despegues
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-lg-6 mb-2">
                    <label>Fecha del despegue</label>
                    @Html.EditorFor(model => model.FechaDespegue, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.FechaDespegue, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-6 mb-2">
                    <label>Nombre del tecnico</label>
                    @Html.EditorFor(model => model.Tecnico, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tecnico, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-12 mb-2">
                    <label>Nombre de la mision</label>
                    @Html.EditorFor(model => model.NombreMision, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombreMision, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="card-footer">
            <input type="submit" value="Guardar" class="btn btn-primary" />
            <button class="btn btn-danger" id="btnReset">Limpiar</button>
        </div>
    </section>
}

<section class="mt-3">
    <article class="card">
        <div class="row">
            <div class="col-lg-10">
                <input type="text" placeholder="ingrese la Serie" class="form-control" id="txtSerie" />
            </div>
            <div class="col-lg-2">
                <button class="btn btn-info" id="btnBuscar">Buscar</button>
            </div>
        </div>
    </article>
    <article class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Serie</th>
                    <th>Marca</th>
                    <th>Modelo</th>
                    <th>Piloto</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="datos">
            </tbody>
        </table>
    </article>
</section>

<script>

    var aviones = [];

    document.querySelector('#btnReset').addEventListener('click', (e) => {
        e.preventDefault();
        Swal.fire({
            title: 'Esta seguro que desea eliminar?',
            text: "Se eliminaran todo los datos y deberás realizar el proceso nuevamente!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, eliminar!'
        }).then((result) => {
            if (result.isConfirmed) {
                aviones = [];
                Listar();
                document.querySelector('#frmDespegues').reset();
                document.querySelector('#txtSerie').value = '';
            }
        });
    });

    document.querySelector('#btnBuscar').addEventListener('click', (e) => {
        const serie = document.querySelector('#txtSerie').value;
        show();
        fetch(`/Despegues/GetBySerie?Serie=${serie}`, {
            method: 'GET',
            headers: { 'Content-Type': 'application/json' },
        }).then(response => response.json())
            .then(response => {
                hide();
                aviones = [...aviones, ...response.Data];
                Listar();
            })
            .catch(error => {
                console.log(error)
            });
    });

    document.querySelector('#frmDespegues').addEventListener('submit', (e) => {
        e.preventDefault();
        const data = Object.fromEntries(new FormData(e.target));

        if (!aviones.some(x => x.NombrePiloto)) return;

        const datos = {
            ...data,
            AvionesDespegue: aviones
        }

        show();
        fetch('/Despegues/Add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(datos)
        }).then(response => response.json())
            .then(response => {
                hide();
                document.querySelector('#frmDespegues').reset();
                aviones = [];
                Listar();
                Alert(response);
            })
            .catch(error => {
                console.log(error)
            });
    });

    function Alert(_data) {
        Swal.fire({
            position: 'center',
            icon: _data.Ok ? 'success' : 'error',
            title: _data.Message,
            showConfirmButton: true
        });
    }

    function Listar() {
        let data = ``;

        aviones.forEach((element, index) => {
            data += `<tr>
                          <td>${element.IdAvion}</td>
                          <td>${element.Serie}</td>
                          <td>${element.Marca}</td>
                          <td>${element.Modelo}</td>
                          <td><input type="text" placeholder="nombre piloto" class="form-control" id="${element.Id}" onblur="HandleBlur(this,${index})"/></td>
                          <td><button class="btn btn-danger" onclick="Delete(${index})">Eliminar</button></td>
                     </tr>`;
        });

        document.querySelector('#datos').innerHTML = data;
    }

    function HandleBlur(input,index) {
        const nombrePiloto = input.value;
        aviones[index].NombrePiloto = nombrePiloto;
    }

    function Delete(_index) {
        aviones.splice(_index, 1);
        Listar();
    }

    function show() {
        document.querySelector('#loader').classList.remove('display');
    }

    function hide() {
        document.querySelector('#loader').classList.add('display');
    }
</script>
